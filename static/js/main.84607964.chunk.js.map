{"version":3,"sources":["logo.svg","Components/ProfileCard.js","Components/TabBar.js","Components/AudioWave.js","Components/ContactMe.js","Components/MySkills.js","Components/AudioEngineering.js","App.js","Components/serviceWorker.js","index.js"],"names":["module","exports","ProfileCard","className","src","React","Component","TabBar","props","state","currentItem","items","burgerStatus","this","map","item","onClick","setState","name","id","content","ContactMe","action","method","enctype","type","value","href","MySkills","AudioEngineering","width","height","imgs","image","desc","link","App","projects","audio","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84607964.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\r\nimport './ProfileCard.css'\r\nclass ProfileCard extends React.Component {\r\n    render(){\r\n        return(\r\n            <div className=\"profile-card\">\r\n               \r\n                <img src=\"./pro_pic.jpg\" className=\"profile-img\"></img>\r\n                <p className=\"about-p\">\r\n                    I am passionate about coding and music. I started programming algorithms for audio back in college when I was studying Audio Engineering, \r\n                    later I got interested in Web Development and I took course in Bogota Bootcamp focused in Ruby on Rails and React. I have been working in a professional basis as a JavaScript Developer for a year now.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileCard;\r\n","import React from 'react'\r\nimport AudioWave from './AudioWave.js'\r\nimport './TabBar.css'\r\nclass TabBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentItem: this.props.items[2],\r\n            burgerStatus: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul className=\"tabs-container\">\r\n                    {this.props.items.map((item) => {\r\n                        if (this.state.burgerStatus) {\r\n                            return (\r\n                                <li>\r\n                                    <button className=\"tabs\" onClick={() => {\r\n                                        this.setState({ currentItem: item })\r\n                                    }}>\r\n                                    <h2>{item.name}</h2>\r\n                                    <hr></hr>\r\n                                    </button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    })}\r\n                </ul>\r\n                <div id=\"content\">\r\n                    {this.state.currentItem.content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default TabBar;\r\n","import React from 'react'\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport {XYPlot, LineSeries, XAxis, YAxis, VerticalGridLines, HorizontalGridLines} from 'react-vis';\r\nimport './AudioWave.css'\r\nclass AudioWave extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        //this.points = Array.from(Array(400).keys())\r\n        //this.points = [0,0.1,0.2,0.3]\r\n        this.points = []\r\n        for(let i = 0; i <= 1; i+=0.01){\r\n            this.points.push(i)\r\n        }\r\n        this.Amplitude = this.props.Amplitude\r\n        this.f = this.props.f\r\n        this.gridStyle = {strokeWidth: 0.2, stroke: \"#389ccada\"}\r\n        console.log(this.props)\r\n    }\r\n    makeWave(a,f,fi){\r\n        let w = this.points.map((point) => {\r\n            return (a * (Math.sin((2*Math.PI*0.5*f*point)+fi)))\r\n        })\r\n        \r\n        return w\r\n    }\r\n    makeChart(x,y){\r\n        let data = x.map((point, key)=>{\r\n            return({x: point, y: y[key]})\r\n        })\r\n        console.log(data)\r\n        return(data)\r\n    }\r\n    sumWave(w1,w2){\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"graph\">\r\n                <XYPlot height={100} width={1000} className=\"xy\" >\r\n                    <LineSeries data={this.makeChart(this.points,this.makeWave(this.Amplitude,this.f,0))} color={this.props.color} style={{strokeWidth: 0.2}}/>\r\n                    <LineSeries data={this.makeChart(this.points,this.makeWave(this.Amplitude/2,this.f,0))} color={this.props.color} style={{strokeWidth: 0.2}}/>\r\n                    <XAxis style={this.gridStyle} />\r\n                    <YAxis style={this.gridStyle}/>\r\n                    <VerticalGridLines  style={this.gridStyle}/>\r\n                    <HorizontalGridLines  style={this.gridStyle} />\r\n                </XYPlot>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioWave;\r\n","import React from 'react'\r\nimport './ContactMe.css'\r\nclass ContactMe extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <div className=\"contact\">\r\n                    <form action=\"mailto:smm9308@gmail.com\" method=\"post\" enctype=\"text/plain\">\r\n                        <label>Name:</label><br />\r\n                        <input type=\"text\" name=\"name\" /><br />\r\n                        <label>E-mail:</label><br />\r\n                        <input type=\"text\" name=\"mail\" /><br />\r\n                        <label>Message:</label><br />\r\n                        <input type=\"text\" name=\"comment\" className=\"message-input\" /><br />\r\n                        <input type=\"submit\" value=\"Send\" className=\"form-button\" />\r\n                        <input type=\"reset\" value=\"Reset\" className=\"form-button\" />\r\n                    </form>\r\n                    <a  href=\"https://www.linkedin.com/in/sebastian-mu%C3%B1oz-mora-70799863/\"><img src=\"linked_icon.png\" className=\"icon\"></img></a>\r\n                    <a  href=\"https://github.com/SebastianMunozMora\"><img src=\"github.png\" className=\"icon\"></img></a>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ContactMe;\r\n","import React from 'react'\r\nimport './MySkills.css'\r\nclass MySkills extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <div className=\"skills\">\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"js.png\"></img>\r\n                                <p className=\"table-p\">HTML, CSS, Javascript</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"ruby.png\"></img>\r\n                                <p className=\"table-p\">Ruby</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"rails.png\"></img>\r\n                                <p className=\"table-p\">Rails</p>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"data.png\"></img>\r\n                                <p className=\"table-p\">SQL Databases</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"java.png\"></img>\r\n                                <p className=\"table-p\">Java</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"android.png\"></img>\r\n                                <p className=\"table-p\">Android Studio</p>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"matlab.png\"></img>\r\n                                <p className=\"table-p\">Matlab</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"lab.png\"></img>\r\n                                <p className=\"table-p\">Lab View</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"arduino.png\"></img>\r\n                                <p className=\"table-p\">Arduino</p>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"pd.png\"></img>\r\n                                <p className=\"table-p\">Pure Data</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"react.png\"></img>\r\n                                <p className=\"table-p\">React JS</p>\r\n                            </td>\r\n                            <td>\r\n                                <img className=\"table-img\" src=\"jquery.png\"></img>\r\n                                <p className=\"table-p\">JQuery</p>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default MySkills;","import React from 'react'\r\nimport './AudioEngineering.css'\r\nimport Slider from 'react-simple-slideshow';\r\nimport TabBar from './TabBar.js'\r\n\r\nclass AudioEngineering extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.items = this.props.items\r\n        this.state = {\r\n            currentItem: this.items[1]\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"audio-engineering\">\r\n                {this.items.map((item) => {\r\n                    return(\r\n                        <button className=\"tabs\" onClick={()=>{\r\n                        return(this.setState({currentItem: item}))\r\n                    }}>\r\n                        {item.name}\r\n                        <hr></hr>\r\n                    </button>\r\n                        \r\n                    )\r\n\r\n                    \r\n                })}\r\n                <div className=\"audio-content\">\r\n                    <div className=\"audio\">\r\n                        <Slider width= \"500px\" height=\"500px\">\r\n                            {this.state.currentItem.imgs.map((image)=>{\r\n                                return(\r\n                                    <div >\r\n                                        <img src={image} className=\"slide-img\"></img>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                    </div>\r\n                    <p className=\"audio-p\">{this.state.currentItem.desc}</p>\r\n                    <a className=\"audio-link\" href={this.state.currentItem.link}>{this.state.currentItem.name}</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioEngineering;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ProfileCard from './Components/ProfileCard.js'\nimport AudioWave from './Components/AudioWave.js'\nimport TabBar from './Components/TabBar.js'\nimport ContactMe from './Components/ContactMe.js'\nimport MySkills from './Components/MySkills.js'\nimport AudioEngineering from './Components/AudioEngineering.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.projects = [\n      {\n        name: \"Audio Speaker design\",\n        imgs: [\n          './audio.png'\n        ],\n        desc: 'Final class project during my education in Bogota Bootcamp, I\\'\\ts a website built for the user to be able to design their speaker system choosing casings, and drivers with color variations, the technique used to change the colors can be used for shirt or bags design',\n        link: 'https://sebastianmunozmora.github.io/AudioShopFront/'\n      },\n      {\n        name: \"Astronomy Picture of the Day Android Front End\",\n        imgs: [\n          './astro1.png',\n          './astro2.png'\n        ],\n        desc: 'Built using Android Studio and Java, consumes the Nasa Api and displays the picture, the date and the description. There is a date picker to view all of the picture uploaded to the api, this link leads to a Github page doing the same built with pure Javascript.',\n        link: 'https://sebastianmunozmora.github.io/Astronomy-Consumtion/'\n      }\n    ]\n    \n    this.audio = [\n      {\n        name: \"Anechoic Chamber\",\n        imgs: [\n          './an1.jpg',\n          './an2.jpg',\n          './an3.jpg'\n        ],\n        desc: \"Created as a class project, it was built for testing small, high frequency range audio speakers or wave guides, it works for 1kHz and above. It's equipped with an XLR input, microphone base, speaker base, and a 360° rotation lever for the speaker, built with Black theater, 10 cm Wedges and MDF\",\n      },\n      {\n        name: \"Midi Controller\",\n        imgs: [\n          \"./mid1.png\",\n          \"./mid2.png\",\n          \"./mid3.png\"\n        ],\n        desc: \"A tool built in Android Studio in Java for users to control their MIDI devices over the usb with their smartphone\"\n      },\n\n    ]\n\n    this.items = [{\n      name: \"About\",\n      content: <ProfileCard />\n    },\n    {\n      name: \"Web Projects\",\n      content: <AudioEngineering items={this.projects} />\n    },\n    {\n      name: \"Skills\",\n      content: <MySkills />\n    },\n    {\n      name: \"Audio Engineering\",\n      content: <AudioEngineering items={this.audio} />\n    },\n    {\n      name: \"Contact Me\",\n      content: <ContactMe />\n    }\n    ]\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Sebastián Muñoz Mora</h1>\n          <TabBar items={this.items} />\n          \n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './Components/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}